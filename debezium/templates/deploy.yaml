apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
{{ include "debezium.labels" . | indent 4 }}
  name: {{ template "debezium.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "debezium.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ include "debezium.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: GROUP_ID
          value: "1"
        - name: CONFIG_STORAGE_TOPIC
          value: "{{ .Values.kafka.config_storage_topic }}"
        - name: OFFSET_STORAGE_TOPIC
          value: "{{ .Values.kafka.offset_storage_topic }}"
        - name: BOOTSTRAP_SERVERS
          value: "{{ .Values.kafka.bootstrap_servers }}"
        name: debezium
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets.name }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

