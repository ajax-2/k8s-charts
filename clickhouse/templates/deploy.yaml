apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
{{ include "clickhouse.labels" . | indent 4 }}
  name: {{ template "clickhouse.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "clickhouse.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ include "clickhouse.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: clickhouse
        volumeMounts:
        - name: database
          mountPath: /var/lib/clickhouse
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - sysctl -w fs.file-max=262144; ulimit -l unlimited;
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: client
        securityContext:
          privileged: true
          procMount: Default
        resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets.name }}
    {{- end }}
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
status: {}
